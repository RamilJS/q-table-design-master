
<template>

  <q-layout view="lHh Lpr lFf" class="bg-grey-1">

    <!-- Шапка шаблона -->

    <q-header elevated class="bg-white text-grey-8 q-py-xs" height-hint="82">

      <q-toolbar class="header-layout">

        <!-- Логотип ВТБЛ и кнопка открытия боковой панели -->

        <transition name="fade">

          <div

            class="main-header-container row no-wrap"

            v-show="!leftDrawerOpen"

          >

            <q-btn

              flat

              no-caps

              no-wrap

              class="button-logo q-pa-xs q-pr-md"

              :to="{ path: '/' }"

            >

              <q-img

                class="vtbl-logo rounded-borders"

                src="icons/vtbl-logo-blue.png"

                alt="Логотип компании"

              />

            </q-btn>

            <q-btn

              flat

              dense

              round

              class="menu-button-right text-primary q-mt-xs"

              aria-label="Menu"

              icon="fa-solid fa-angles-left"

              @click="toggleLeftDrawer"

            />

          </div>

        </transition>

 

        <!-- Поле поиска -->

        <div class="search-container column">

          <div class="YL__toolbar-input-container row no-wrap q-ml-lg q-mt-sm">

            <q-input

              v-model="search"

              dense

              outlined

              placeholder="Поиск"

              class="bg-white col"

              @keydown.enter="onSearchEnter"

            >

              <q-btn

                padding="none"

                class="YL__toolbar-input-btn"

                text-color="grey-5"

                icon="search"

                size="lg"

                unelevated

                @click="onSearchButtonClick"

              />

            </q-input>

          </div>

        </div>

        <q-space />

 

        <!-- Блок пользователя -->

        <div

          class="user-container q-gutter-sm row items-center no-wrap justify-between"

        >

          <q-btn

            class="notifications"

            round

            dense

            flat

            color="#C0C0C0"

            icon="fa-regular fa-bell"

          >

            <q-badge

              class="notifications-count"

              text-color="white"

              floating

            >

              2

            </q-badge>

            <q-tooltip>Уведомления</q-tooltip>

          </q-btn>

          <div class="user-item row no-wrap justify-around">

            <a class="user-avatar-link" href="#">

              <q-avatar class="user-avatar" size="40px">

                <img

                  class="user-avatar-image"

                  src="images/user-avatar.png"

                  alt="Фотография пользователя"

                />

              </q-avatar>

              <q-tooltip

                >Константинопольская Святослава Пантелеймоновна</q-tooltip

              >

            </a>

            <p class="user-name text-black q-pt-md">

              Константинопольская <br />

              Святослава Пантелеймоновна

            </p>

            <q-btn

              class="user-down-button"

              round

              dense

              flat

              icon="fa-solid fa-caret-down"

            />

          </div>

        </div>

      </q-toolbar>

    </q-header>

 

     <!-- Боковая панель -->

     <q-drawer v-model="leftDrawerOpen" show-if-above bordered class="bg-grey-2 left-drawer" :width="360">

      <q-scroll-area class="fit blue-10 left-drawer">

        <q-list padding>

          <div class="drawer-header row">

            <div class="drawer-header-container row justify-between q-mb-md">

              <q-btn v-if="$q.screen.gt.xs" flat no-caps no-wrap class="button-logo q-pa-xs" :to="{ path: '/' }">

                <q-img class="vtbl-logo rounded-borders" src="icons/vtbl-logo.png" alt="Логотип компании" />

              </q-btn>

              <q-btn flat dense round class="menu-button text-white q-mt-sm q-ml-md" aria-label="Menu" icon="fa-solid fa-angles-left" @click="toggleLeftDrawer" />

            </div>

          </div>

 

          <q-expansion-item

            v-for="category in categories"

            :key="category.id"

            :icon="category.icon"

            :label="category.text"

            class="text-white link-text" label-class="text-white" icon-class="text-white"

            expand-icon-class="text-white"

            :model-value="openedItem === category.id"

            @update:model-value="(value) => onItemToggle(category.id, value)"

          >

            <q-item

              v-for="link in getChildLinks(category.id)"

              :key="link.id"

              clickable v-ripple

              @click="navigate(link.path)"

              class="q-pl-lg"

            >

              <q-item-section avatar>

                <q-icon :name="link.icon" class="text-white q-pa-none" />

              </q-item-section>

              <q-item-section class="text-white link-text">{{ link.text }}</q-item-section>

            </q-item>

          </q-expansion-item>

 

          <q-separator class="q-my-md" />

 

          <div class="feedback-container row absolute-bottom">

            <q-item-section avatar class="q-pl-md q-pb-xl">

              <q-icon name="fa-solid fa-circle-question" class="question-icon text-white" />

            </q-item-section>

 

          <div class="column q-ml-xs">

            <p class="feedback-description text-white q-mb-xs">Нашли ошибку или нужна помощь?</p>

            <!-- тут меняем href на нужный путь-->

            <a

              class="feedback-link"

              href="#"

              >

              Напишите нам

            </a>

          </div>

        </div>

        </q-list>

      </q-scroll-area>

    </q-drawer>

 

    <q-page-container>

      <router-view />

    </q-page-container>

  </q-layout>

</template>

 

<script>

import { ref, onMounted, /*computed*/ } from "vue";

import { useRouter } from "vue-router";

import axios from "axios";

 

export default {

  name: "MyLayout",

  setup() {

    const leftDrawerOpen = ref(false);

    const search = ref("");

    //const searchLayout = "";

    const router = useRouter();

    const openedItem = ref("");

    const userArray = ref([]);

    const menuLinks = ref([]); // весь ответ от сервера

    const categories = ref([]); // Заголовки вкладок

 

    const BACKEND_URL =

      "https://als-wt/pp/Ext5/extjs_json_collection_data.html";

 

    // Функция для выполнения запроса поиска

    /*const fetchSearchResults = async () => {

      try {

        const response = await axios.get(BACKEND_URL, { params: { search: searchLayout.value } });

        searchResult.value = response.data;

      } catch (error) {

        console.error('Error fetching layout data:', error);

      }

    };*/

    // Обработчик на иконку в поле поиска

    const onSearchButtonClick = () => {

      router.push({ path: "#", query: { search: search.value } });

    };

 

    // Обработчик Enter в поле поиска

    const onSearchEnter = (event) => {

      if (event.key === "Enter") {

        router.push({ path: "#", query: { search: search.value } });

      }

    };

 

    const fetchMenuLinks = async () => {

      try {

        //  параметры

        const collection_code = "vtbl_quasar_main_menu";

        /*const secid = "CA738838629DDFA25B6400986A6FFD42";

        const parameters =

          "dates=11.07.2024;view_mode=0;mode=get_data;person_id=6808456539733239590;building_id=;city_id=;country_id=6896250987568264502;end_date=11.07.2024;start_date=11.07.2024";

        const referer_url =

          "https%3A%2F%2Fals-wt%2F_wt%2Fbooking_place_2%2Fdoc_id%2F6891573291568473037";

        const node = "_$RootNode92834723847";*/

 

        const url = BACKEND_URL;

 

        const params = {

          collection_code: collection_code,

          /*,

          testParam1: secid,

          testParam2: collection_code,

          testParam3: parameters,

          testParam4: referer_url,

          testParam5: node,*/

        };

 

        const response = await axios.post(

          url,

          new URLSearchParams(params).toString()

        );

 

        menuLinks.value = response.data[0].results;

        categories.value = response.data[0].results.filter(link => link.parent_id === "");

      } catch (error) {

        console.error("Ошибка загрузки меню", error);

      }

    };

    const fetchUsersInfo = async () => {

      try {

        //  параметры

        const collection_code = "vtbl_quasar_user_data";

        /*const secid = "CA738838629DDFA25B6400986A6FFD42";

        const parameters =

          "dates=11.07.2024;view_mode=0;mode=get_data;person_id=6808456539733239590;building_id=;city_id=;country_id=6896250987568264502;end_date=11.07.2024;start_date=11.07.2024";

        const referer_url =

          "https%3A%2F%2Fals-wt%2F_wt%2Fbooking_place_2%2Fdoc_id%2F6891573291568473037";

        const node = "_$RootNode92834723847";*/

 

        const url = BACKEND_URL;

 

        const params = {

          //testParam1: secid,

          testParam2: collection_code,

          //testParam3: parameters,

          //testParam4: referer_url,

          //testParam5: node,

        };

 

        // POST запрос

        const response = await axios.post

        (url,

        new URLSearchParams(params).toString()

        );

 

        userArray.value = response.data;

      } catch (error) {

        console.error("Ошибка загрузки данных сотрудника", error);

      }

    };

 

    onMounted(() => {

      fetchMenuLinks();

      fetchUsersInfo();

    });

 

    /*const getLinksByParentId = (parentId) => {

      return serverAnswer[0].results.filter(link => link.parent_id === "");

    };*/

    const getChildLinks = (id) => {

      return menuLinks.value.filter(link => link.parent_id === id);

    };

 

    function toggleLeftDrawer() {

      leftDrawerOpen.value = !leftDrawerOpen.value;

    }

 

    function navigate(path) {

      router.push(path);

    }

 

    function onItemToggle(item, value) {

      if (value) {

        openedItem.value = item;

      } else {

        openedItem.value = "";

      }

    }

 

    return {

      leftDrawerOpen,

      search,

      toggleLeftDrawer,

      navigate,

      openedItem,

      onItemToggle,

      onSearchEnter,

      onSearchButtonClick,

      categories,

      userArray,

      //serverAnswer,

      //getLinksByParentId,

      getChildLinks

    };

  },

};

</script>


 

 

